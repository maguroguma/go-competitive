snippet     bipartiteJudge
abbr        func dfs(v, c int) bool
options     head
  // BipartiteJudge returns whether a graph is the bipartite graph or not,
  //  and colors of nodes consisting the graph.
  // O(|V|)
  func BipartiteJudge(G [][]int) ([]int, bool) {
    v := len(G)
    colors := make([]int, v)

    for i := 0; i < v; i++ {
      if colors[i] == 0 {
        // まだ頂点iが塗られていなければ1で塗る
        if !dfs(i, 1, colors, G) {
          return colors, false
        }
      }
    }

    return colors, true
  }

  // v: current node id, c: color
  func dfs(v, c int, colors []int, G [][]int) bool {
    colors[v] = c
    for _, nid := range G[v] {
      if colors[nid] == c {
        return false
      }
      if colors[nid] == 0 && !dfs(nid, -c, colors, G) {
        return false
      }
    }

    return true
  }

snippet     largestRectangle
abbr        func LargestRectangle(height []int64) int64
options     head
  // LargestRectangle calculates an area of largest rectangle in a histgram.
  // Time complexity: O(len(height))
  func LargestRectangle(height []${1:int64}) $1 {
    H := make([]$1, len(height))
    copy(H, height)

    _max := func(x, y $1) $1 {
      if x > y {
        return x
      }
      return y
    }
    _top := func(S []$1) $1 { return S[len(S)-1] }

    st := []$1{}
    H = append(H, 0)
    left := make([]$1, len(H))
    res := $1(0)

    for i := $1(0); i < $1(len(H)); i++ {
      for len(st) > 0 && H[_top(st)] >= H[i] {
        res = _max(res, (i-left[_top(st)]-1)*H[_top(st)])
        st = st[:len(st)-1]
      }

      if len(st) == 0 {
        left[i] = -1
      } else {
        left[i] = _top(st)
      }

      st = append(st, i)
    }

    return res
  }

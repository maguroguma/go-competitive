snippet     sieve
abbr        sieve(n int) (int, []int)
options     head
  // エラトステネスの篩: O(NloglogN)
  // n以下の素数の数と素数のスライスを返す
  func sieve(n int) (int, []int) {
    // var prime [2000000 + 5]int
    prime := []int{}
    var isPrime [2000000 + 5 + 1]bool

    p := 0
    for i := 0; i <= n; i++ {
      isPrime[i] = true
    }
    isPrime[0], isPrime[1] = false, false

    for i := 2; i <= n; i++ {
      // iがtrueで残っている場合は素数認定し、自分より大きい倍数を取り除いていく
      if isPrime[i] {
        // prime[p] = i
        prime = append(prime, i)
        p++

        // 倍数の除去
        for j := 2 * i; j <= n; j += i {
          isPrime[j] = false
        }
      }
    }

    return p, prime
  }

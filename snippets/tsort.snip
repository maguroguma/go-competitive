snippet     tsort
abbr        tsort(nn int, edges [][]int) (bool, []int)
options     head
  // O(|E| + |V|)
  // ノードIDは0-based
  // ok, ans := tsort(v, edges[:])
  // https://onlinejudge.u-aizu.ac.jp/problems/GRL_4_B
  func tsort(nn int, edges [][]int) (bool, []int) {
    res := []int{}

    degin := make([]int, nn)
    for s := 0; s < nn; s++ {
      for _, t := range edges[s] {
        degin[t]++
      }
    }

    st := []int{}
    for nid := 0; nid < nn; nid++ {
      if degin[nid] == 0 {
        st = append(st, nid)
      }
    }

    for len(st) > 0 {
      cid := st[len(st)-1]
      res = append(res, cid)
      st = st[:len(st)-1]

      for _, nid := range edges[cid] {
        degin[nid]--
        if degin[nid] == 0 {
          st = append(st, nid)
        }
      }
    }

    if len(res) != nn {
      return false, nil
    }

    return true, res
  }

  // トポロジカルソート済みリストから最長経路の長さを計算する
  // l := longestPath(res, edges[:])
  // https://atcoder.jp/contests/abc139/tasks/abc139_e
  func longestPath(tsortedNodes []int, edges [][]int) int {
    dp := make([]int, len(tsortedNodes)+1)

    for i := 0; i < len(tsortedNodes); i++ {
      cid := tsortedNodes[i]
      for _, nid := range edges[cid] {
        ChMax(&dp[nid], dp[cid]+1)
      }
    }

    res := 0
    for i := 0; i < len(tsortedNodes); i++ {
      ChMax(&res, dp[i])
    }

    return res
  }

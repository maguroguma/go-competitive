snippet     powerMatrix
abbr        powMat(A [][]int, n int) [][]int
options     head
  // n*nのint型正方行列を生成する
  func newMat(n int) [][]int {
    A := make([][]int, n)
    for i := 0; i < n; i++ {
      A[i] = make([]int, n)
    }

    return A
  }

  // 行列A, Bに関するA*Bの計算
  func mul(A, B [][]int, mod int) [][]int {
    C := make([][]int, len(A))
    for i := 0; i < len(A); i++ {
      C[i] = make([]int, len(B[0]))
    }

    for i := 0; i < len(A); i++ {
      for k := 0; k < len(B); k++ {
        for j := 0; j < len(B[0]); j++ {
          C[i][j] = (C[i][j] + A[i][k]*B[k][j]) % mod
        }
      }
    }

    return C
  }

  // 行列Aに関するA^nの計算
  func powMat(A [][]int, n, mod int) [][]int {
    B := make([][]int, len(A))
    for i := 0; i < len(A); i++ {
      B[i] = make([]int, len(A))
    }

    for i := 0; i < len(A); i++ {
      B[i][i] = 1
    }
    for n > 0 {
      if n&1 == 1 {
        B = mul(B, A, mod)
      }
      A = mul(A, A, mod)
      n = (n >> 1)
    }

    return B
  }
